CREATE TABLE IF NOT EXISTS EVENT_TABLE (
    Event_ID INTEGER PRIMARY KEY,
    Event_Name VARCHAR(100),
    Event_Start_Time TIME,
    Event_End_Time TIME,
    Event_Start_Date DATE,
    Event_End_Date DATE,
    Event_Status VARCHAR(50),
    Event_Description TEXT,
    Budget_ID INTEGER,
    Event_Host VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS BUDGET_TABLE (
    Budget_ID INTEGER PRIMARY KEY,
    Item_Name VARCHAR(100),
    Item_Quantity INTEGER,
    Item_Cost DECIMAL(10, 2),
    Total_Cost DECIMAL(10, 2),
    Budget_Status VARCHAR(50),
    Event_ID INTEGER REFERENCES EVENT_TABLE(Event_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_TABLE (
    User_ID INTEGER PRIMARY KEY,
    User_First_Name VARCHAR(50),
    User_Last_Name VARCHAR(50),
    User_Department VARCHAR(100),
    User_Email VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS MEDIA_TABLE (
    Media_ID INTEGER PRIMARY KEY,
    Media_URL TEXT,
    Media_Type VARCHAR(50),
    Media_Name VARCHAR(100),
    User_ID INTEGER REFERENCES USER_TABLE(User_ID) ON DELETE CASCADE,
    Event_ID INTEGER REFERENCES EVENT_TABLE(Event_ID) ON DELETE CASCADE,
    Media_Size INTEGER
);

CREATE TABLE IF NOT EXISTS TAGS_CATEGORIES_TABLE (
    Tag_ID INTEGER PRIMARY KEY,
    Tag_Name VARCHAR(100),
    Tag_Description TEXT
);

CREATE TABLE IF NOT EXISTS PERMISSION_LEVEL_TABLE (
    Permission_Level_ID INTEGER PRIMARY KEY,
    Permission_Level VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS ROLES_TABLE (
    Role_ID INTEGER PRIMARY KEY,
    Role_Name VARCHAR(100),
    Permission_Level_ID INTEGER REFERENCES PERMISSION_LEVEL_TABLE(Permission_Level_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PERMISSION_TYPE_TABLE (
    Permission_Type_ID INTEGER PRIMARY KEY,
    Permission_Type VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS USER_EVENT_TABLE (
    User_ID INTEGER,
    Event_ID INTEGER,
    FOREIGN KEY (User_ID) REFERENCES USER_TABLE(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Event_ID) REFERENCES EVENT_TABLE(Event_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS EVENT_TAGS_TABLE (
    Event_ID INTEGER,
    Tag_ID INTEGER,
    FOREIGN KEY (Event_ID) REFERENCES EVENT_TABLE(Event_ID) ON DELETE CASCADE,
    FOREIGN KEY (Tag_ID) REFERENCES TAGS_CATEGORIES_TABLE(Tag_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PERMISSION_LEVEL_TYPE_TABLE (
    Permission_Level_ID INTEGER,
    Permission_Type_ID INTEGER,
    FOREIGN KEY (Permission_Level_ID) REFERENCES PERMISSION_LEVEL_TABLE(Permission_Level_ID) ON DELETE CASCADE,
    FOREIGN KEY (Permission_Type_ID) REFERENCES PERMISSION_TYPE_TABLE(Permission_Type_ID) ON DELETE CASCADE
);